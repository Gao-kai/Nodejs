/******
 * 1. restful 风格API
 *    根据请求方法和请求路径，就可以确定对服务端的资源采取什么操作，好处是只要一个路径就可以完成增删改查操作
 *      GET /user 获取用户信息
 *      POST /user 添加用户
 *      DELETE /user 删除用户
 *      PUT /user 修改用户
 *      OPTIONS 发起跨域请求的时候 当请求是一个非简单请求的时候 会在发真实请求前发送一个OPTIONS 预检请求
 * 
 * 2. 简单请求
 *  + get post为默认简单请求
 *  + 当添加一个自定义请求头比如token的时候 就变成了复杂请求  
 * 
 * 3. 状态码
 *  + 204 请求成功 但是没有返回体
 *  + 206 Partial Content
 *    206 Partial Content表示该服务器已经成功处理了部分 GET 请求。类似于 FlashGet 或者迅雷这类的 HTTP下载工具都是使用此类响应实现断点续传或者将一个大文档分解为多个下载段同时下载。
 *      该请求必须包含 Range 头信息来指示客户端希望得到的内容范围，并且可能包含 If-Range 来作为请求条件。
 *      响应必须包含如下的头部域：
 *      Content-Range 用以指示本次响应中返回的内容的范围；如果是 Content-Type 为 multipart/byteranges 的多段下载，
 *      则每一 multipart 段中都应包含 Content-Range 域用以指示本段的内容范围。
 *      假如响应中包含 Content-Length，那么它的数值必须匹配它返回的内容范围的真实字节数。
 * 
 *  + 400 客户端参数报错
 *  + 401 未登录
 *  + 403 登录了但是没有权限访问资源
 *  + 404 找不到资源
 *  + 405 服务器不支持此方法
 */     